1- Which keyword does Python use to define a function?
ans : def

2- What does the void keyword mean when it is specified before a function definition?
ans : The function does not return a value.

3- What can the following function be used for?
 

    def mystery(x):
    if (x % 2 == 0):
    return("yes")
    else:
    return("no")
ans : checking whether a number is even or odd

4- Which is not a benefit of functions?
ans : Functions eliminate crashes in your code.

5- What will the following code print?
    def compare():
    print(5, "is greater than", 6)
ans : This code will not print anything.

6- The code that's contained inside of a function is often called the function's legs.
ans : FALSE

7- Why is there no output for this program?
 
    def goodbye():
    print("Bye")
ans : We never called the goodbye function.

8- Given the following code, how would you call the function?
    def hello(name):
    print("Hey,", name)   

ans : def hello(name):
    print("Hey,", name)

9- What is the issue with this function as defined?
 
    def double():
    print(x*2)
ans : The number to double is not received.

10- Which Python keyword is used to send back values from a function?
ans : return

11- What will the following program print?
         def mult_inv(num):
        return 1/num
        result=mult_inv(3)
        print(result)
ans : 0.333333333


12- What is the output of the following program?
    def isEven(num):
  return num % 2 == 0

 if isEven(3):
  print("3 is even")
 else:
  print("3 is not even")
ans : 3 is not even

13- Given the first line of the function definition below, which programming language is this?
    def factorial(number)
ans : Ruby

14- Which value is not an argument to the "hello" function?
    def hello(name):
    print("Hey,", name)
    hello("John")
    hello("Mya")
ans : Hey

15- In this function definition, the variable "name" is _____.
    def hello(name):
    print("Hey,", name)
ans: a parameter